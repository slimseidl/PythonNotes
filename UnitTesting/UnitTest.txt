Unit test Module 

    - a software testing technique that involves testing a software application's units or components
    - the built-in unit test module provides a framework for writing and executing unit tests
    - typically written as functions that test a specific piece of functionality in the application

    - Benefits 

        - Early Bug Detection 

            -  helps identify bugs and issues early in the development process,
        
        - Code Refactoring 

            - allows developers to refactor code with confidence, knowing that they can quickly test the impact of their changes.

        - Documentation 

            - serve as documentation for the application, providing a clear and concise description of each unit or component.

        - Regression Testing 

            - can be run automatically, making it easy to catch regressions in the application as changes are made.

    - create test cases, test suites, and assertions
    - Use setUp and tearDown methods to set up and clean up test fixtures
    - Write individual test methods for each test case, focusing on the specific functionality or behavior of the tested code
    - assertEqual, assertTrue, assertRaises, etc., to verify expected results and ensure the code behaves as intended
    - Use coverage testing tools like coverage.py to measure the extent of code coverage during testing, ensuring that all relevant code paths are exercised.